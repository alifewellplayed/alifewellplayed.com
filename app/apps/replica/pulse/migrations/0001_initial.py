# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-07 14:26
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import replica.pulse.models
import replica.uploads
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=510)),
                ('slug', models.SlugField(max_length=510, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Channels',
                'db_table': 'r_Channel',
                'ordering': ('-title',),
            },
        ),
        migrations.CreateModel(
            name='CodeBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=510)),
                ('slug', models.SlugField(max_length=510, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('type', models.IntegerField(choices=[(1, 'Partial'), (2, 'Page Template')], default=1)),
                ('css_upload', models.FileField(blank=True, upload_to=replica.uploads.upload_css)),
                ('template_html', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HTML Template',
                'verbose_name_plural': 'HTML Templates',
                'db_table': 'r_CodeBlock',
                'ordering': ('-date_updated',),
                'get_latest_by': 'date_updated',
            },
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=510)),
                ('slug', models.SlugField(max_length=510, unique_for_date='pub_date')),
                ('content_format', models.CharField(choices=[('markdown', 'Markdown'), ('html', 'Raw HTML')], default='markdown', max_length=25)),
                ('deck', models.TextField(blank=True, verbose_name='summary')),
                ('deck_html', models.TextField(blank=True, editable=False)),
                ('body', models.TextField(blank=True, verbose_name='body')),
                ('body_html', models.TextField(blank=True, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(default=replica.pulse.models.DefaultChannel, on_delete=django.db.models.deletion.CASCADE, to='pulse.Channel', verbose_name='Entry Type')),
            ],
            options={
                'verbose_name_plural': 'drafts',
                'db_table': 'r_Draft',
                'ordering': ('-id',),
                'get_latest_by': 'date_updated',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=510)),
                ('slug', models.SlugField(max_length=510, unique_for_date='pub_date')),
                ('url', models.CharField(blank=True, max_length=510)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Publication date')),
                ('is_active', models.BooleanField(choices=[(True, 'Published'), (False, 'Draft')], default=False, help_text='This should be checked for live entries')),
                ('content_format', models.CharField(choices=[('markdown', 'Markdown'), ('html', 'Raw HTML')], default='markdown', max_length=25)),
                ('deck', models.TextField(blank=True, verbose_name='deck')),
                ('deck_html', models.TextField(blank=True)),
                ('body', models.TextField(blank=True, null=True, verbose_name='body')),
                ('body_html', models.TextField(blank=True)),
                ('channel', models.ForeignKey(default=replica.pulse.models.DefaultChannel, on_delete=django.db.models.deletion.CASCADE, to='pulse.Channel', verbose_name='Entry Type')),
            ],
            options={
                'verbose_name_plural': 'entries',
                'db_table': 'r_Entry',
                'ordering': ('-pub_date',),
                'get_latest_by': 'pub_date',
            },
        ),
        migrations.CreateModel(
            name='EntryLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(max_length=510)),
                ('title', models.CharField(default='Untitled', max_length=510)),
                ('deck', models.TextField(blank=True, verbose_name='summary')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pulse.Entry')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entry Link',
                'verbose_name_plural': 'Entry Links',
                'db_table': 'r_EntryLink',
                'ordering': ('-title',),
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.PositiveSmallIntegerField(choices=[(0, 'embed'), (1, 'image'), (2, 'url'), (3, 'Instagram')], default=1)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=510)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=510)),
                ('caption', models.CharField(blank=True, max_length=510)),
                ('content', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Support for PNG, JPG, GIF only', max_length=510, upload_to=replica.uploads.upload_media)),
                ('thumbnail_small', models.ImageField(blank=True, max_length=510, upload_to=replica.uploads.upload_media_sm)),
                ('thumbnail_medium', models.ImageField(blank=True, max_length=510, upload_to=replica.uploads.upload_media_md)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Media',
                'db_table': 'r_Media',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('icon', models.SlugField(blank=True, choices=[('fa fa-home', 'Home'), ('fa fa-pencil-square-o', 'Posts'), ('fa fa-book', 'Notes'), ('fa fa-tags', 'Topics'), ('fa fa-code-fork', 'Channels'), ('fa fa-file-image-o', 'Media'), ('fa fa-cogs', 'Gears')], max_length=510)),
                ('title', models.CharField(default='Untitled', max_length=510)),
                ('description', models.CharField(blank=True, help_text='Optional subtitle', max_length=510)),
                ('slug', models.SlugField(blank=True, max_length=510)),
                ('url', models.CharField(blank=True, max_length=510)),
                ('weight', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(blank=True, default=replica.pulse.models.DefaultEntry, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.Entry')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'db_table': 'r_MenuItem',
                'ordering': ('weight',),
            },
        ),
        migrations.CreateModel(
            name='MenuPosition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='Untitled', max_length=510)),
                ('slug', models.SlugField(max_length=510)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
                'db_table': 'r_MenuPosition',
                'ordering': ('-title',),
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('site_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sites.Site')),
                ('is_enabled', models.BooleanField(choices=[(True, 'Enabled'), (False, 'Disabled')], default=True, help_text='Is site enabled?')),
                ('password', models.CharField(blank=True, max_length=128)),
                ('secret_token', models.CharField(blank=True, max_length=12)),
                ('view_settings', models.TextField(default='{}')),
                ('author', models.CharField(blank=True, max_length=510)),
                ('description', models.TextField(blank=True, help_text='Site Description', null=True)),
                ('summary', models.TextField(blank=True, help_text='Summary')),
                ('summary_html', models.TextField(blank=True, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.Media')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
                'db_table': 'r_SiteSettings',
            },
            bases=('sites.site',),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=510)),
                ('slug', models.SlugField(max_length=510)),
                ('description', models.TextField(blank=True, max_length=1020)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(choices=[(True, 'Everyone'), (False, 'No one')], default=True, help_text='Can everyone see this Topic?')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.Media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'topics',
                'db_table': 'r_Topic',
                'ordering': ['-title'],
                'get_latest_by': 'title',
            },
        ),
        migrations.AddField(
            model_name='menuitem',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pulse.MenuPosition'),
        ),
        migrations.AddField(
            model_name='entry',
            name='featured_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.Media'),
        ),
        migrations.AddField(
            model_name='entry',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.CodeBlock'),
        ),
        migrations.AddField(
            model_name='entry',
            name='topic',
            field=models.ManyToManyField(blank=True, db_table='r_Entry_Topics', to='pulse.Topic'),
        ),
        migrations.AddField(
            model_name='entry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draft',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pulse.Entry'),
        ),
        migrations.AddField(
            model_name='draft',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drafts', to=settings.AUTH_USER_MODEL),
        ),
    ]
